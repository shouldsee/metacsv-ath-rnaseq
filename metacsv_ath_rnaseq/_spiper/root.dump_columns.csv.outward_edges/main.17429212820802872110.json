{
  "version": "0.1.4",
  "to_dict": {
    "dotname": "__main__:main",
    "args_tuples": [
      "['prefix'       ,spiper._types.File            ,File('/home/user/repos/metacsv-ath-rnaseq/_build/root')]",
      "['csv_file'     ,spiper._types.File            ,File('/home/user/repos/metacsv-ath-rnaseq/metacsv_ath_rnaseq/root.dump_columns.csv')]",
      "['_output'      ,builtins.list                 ,[]]"
    ],
    "code": "<code object main at 0x7f53ca0d3ae0, file \"main.py\", line 105>",
    "sourcefile": "/home/user/repos/metacsv-ath-rnaseq/main.py",
    "sourcelines": [
      "@Flow",
      "def main(self, prefix, csv_file=File, _output=[]):",
      "    test_csv_file = fn = csv_file+'.test.csv'",
      "    if 1:",
      "        with open(csv_file, 'r') as f:",
      "            with open(fn, 'w') as fo:",
      "                fo.write('\\n'.join(f.read().splitlines()[:100]))",
      "    self.config_runner(tag='test')(",
      "        fetch_AccList_as_SimpleCsv,       prefix, test_csv_file)",
      "    # self.config_runner(tag='production')(fetch_AccList_as_SimpleCsv, prefix, csv_file)",
      "    return self"
    ]
  },
  "modules": [
    [
      "spiper",
      "0.1.4"
    ],
    [
      "orderedattrdict",
      "1.5.1"
    ]
  ],
  "caller_dump": "gANjc3BpcGVyLnJ1bm5lcgpDYWxsZXIKcQApgXEBfXECKFgFAAAAbmFtZWRxA4hYCAAAAF9fbmFtZV9fcQRYBAAAAG1haW5xBVgDAAAAam9icQZjc3BpcGVyLnJ1bm5lcgpGYWtlSm9iCnEHKYFxCH1xCShoBGgFWAgAAABfX2NvZGVfX3EKY2J1aWx0aW5zCmdldGF0dHIKcQtjc3BpcGVyLnJ1bm5lcgpGYWtlQ29kZQpxDFgIAAAAX2NvZGVjbHNxDYZxDlJxD0NwfAJkARcABAB9BH0FdAB8AmQCgwKPPH0GdAB8BWQDgwKPJn0HfAdqAWQEagJ8BmoDgwBqBIMAZABkBYUCGQCDAYMBAQBXAGQAUQBSAFgAVwBkAFEAUgBYAHwAagVkBmQHjQF0BnwBfASDAwEAfABTAHEQXXERKE5YCQAAAC50ZXN0LmNzdnESWAEAAABycRNYAQAAAHdxFFgBAAAACnEVS2RYBAAAAHRlc3RxFlgDAAAAdGFncReFcRhlhnEZgXEaWAwAAABfX3F1YWxuYW1lX19xG2gFWAoAAABfX21vZHVsZV9fcRxYCAAAAF9fbWFpbl9fcR1YDAAAAF9vdXRwdXRfdHlwZXEeY3NwaXBlci5fdHlwZXMKUGlja2xhYmxlTmFtZWRUdXBsZQpxHymBcSB9cSEoWAQAAABuYW1lcSJYBgAAAG15RGF0YXEjWAYAAABmaWVsZHNxJClYDQAAAF90eXBlZF9maWVsZHNxJV1xJmgcaB1oG1gRAAAAbWFpbi5fb3V0cHV0X3R5cGVxJ3VidWJoHmggWAkAAABfam9iX3R5cGVxKGNzcGlwZXIuX3R5cGVzCkZsb3dGdW5jdGlvbgpxKVgKAAAAYXJnX3R1cGxlc3EqXXErKFgGAAAAcHJlZml4cSxjc3BpcGVyLl90eXBlcwpGaWxlCnEtWC8AAAAvaG9tZS91c2VyL3JlcG9zL21ldGFjc3YtYXRoLXJuYXNlcS9fYnVpbGQvcm9vdHEuhXEvgXEwhnExWAgAAABjc3ZfZmlsZXEyaC1YTAAAAC9ob21lL3VzZXIvcmVwb3MvbWV0YWNzdi1hdGgtcm5hc2VxL21ldGFjc3ZfYXRoX3JuYXNlcS9yb290LmR1bXBfY29sdW1ucy5jc3ZxM4VxNIFxNYZxNlgHAAAAX291dHB1dHE3aCaGcThlWAoAAABkaXJfbGF5b3V0cTlYBQAAAGNsZWFucTpYCAAAAF9zdWJmbG93cTtjb3JkZXJlZGF0dHJkaWN0CkF0dHJEaWN0CnE8KVJxPVgfAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YtdGVzdHE+aAApgXE/fXFAKGgDiGgEaD5oBmgHKYFxQX1xQihoBFgaAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3ZxQ2gKaA9CUgEAAGQBZABsAH0EZAFkAGwBfQVkAWQAbAJ9BmQBZAJsA20EfQdtBX0IAQBkAWQAbAZ9CWQBZABsB30KfABqCGoJc2Z0CmQDdAt0DHQNfAJkBIMCag6DAGoPgwBqEIMAgwGDARYAgwEBAHQRfAJkAGQFjQJqEn0LfABqCHQTfABqFHwCgwN9DHwAaghqCZABc058CWoVdA18DGoWahdkBoMCZAdkCIQAZAmNAn0NfA1kChkAZAEZAGQLGQB9DmQMZA2EAHwORACDAX0OdBhkDmQNhAB8DkQAgwFnAIMCiQCHAGYBZA9kDYQIfAtEAIMBfQ90C3wPgwFkAWsCkAFzBHQZdBqDAYIBdBtqHGQQZA2EAHwORACDAWQRZBKNAmodfRB8EGoeZBNnAWQUjQF9EHwQah98AGoWaiBkAWQVjQIBAHQKZBZ0C3wQgwEWAIMBAQB8AFMAcURdcUUoTksAWAYAAABDbGllbnRxRlgNAAAARVNlYXJjaFJlc3VsdHFHhnFIWBkAAABbZmV0Y2hpbmddICVzIHNyYSByZWNvcmRzcUloE1gGAAAAaGVhZGVycUqFcUtYAgAAAHJicUxoD0MEZAFTAHFNXXFOKE6IZYZxT4FxUFgsAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YuPGxvY2Fscz4uPGxhbWJkYT5xUVgKAAAAZm9yY2VfbGlzdHFShXFTWBYAAABFWFBFUklNRU5UX1BBQ0tBR0VfU0VUcVRYEgAAAEVYUEVSSU1FTlRfUEFDS0FHRXFVaA9DFmcAfABdDn0BdABqAXwBgwGRAnEEUwBxVl1xV4ZxWIFxWVguAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YuPGxvY2Fscz4uPGxpc3Rjb21wPnFaaA9DGGcAfABdEH0BfAFqAIMAZAAZAJECcQRTAHFbXXFcWAsAAABSVU5fSURfTElTVHFdYYZxXoFxX2gPQxhnAHwAXRB9AXwBiABrB3IEfAGRAnEEUwBxYF1xYYZxYoFxY2gPQxpnAHwAXRJ9AXQAagF8AWoCgwCDAZECcQRTAHFkXXFlhnFmgXFnSwFYBAAAAGF4aXNxaIVxaVgJAAAAU0FNUExFX0lEcWpYBgAAAHN1YnNldHFrhXFsWAUAAABpbmRleHFthXFuWBkAAABbZmV0Y2hpbmddIGdvdCAlcyByZWNvcmRzcW9lhnFwgXFxaBtoQ2gcaB1oHmgfKYFxcn1xcyhoImgjaCRYAwAAAGNzdnF0hXF1aCVdcXZodGFoHGgdaBtYJwAAAGZldGNoX0FjY0xpc3RfYXNfU2ltcGxlQ3N2Ll9vdXRwdXRfdHlwZXF3dWJ1YmgeaHJoKGgpaCpdcXgoaCxoLVgvAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvX2J1aWxkL3Jvb3RxeYVxeoFxe4ZxfFgFAAAAaW5wdXRxfWgtWFUAAAAvaG9tZS91c2VyL3JlcG9zL21ldGFjc3YtYXRoLXJuYXNlcS9tZXRhY3N2X2F0aF9ybmFzZXEvcm9vdC5kdW1wX2NvbHVtbnMuY3N2LnRlc3QuY3N2cX6FcX+BcYCGcYFoN2h2hnGCZWg5aDpoO2g8KVJxg1gZAAAAZmV0Y2hfQWNjTGlzdF9hc19YbWwtdGVzdHGEaAApgXGFfXGGKGgDiGgEaIRoBmgHKYFxh31xiChoBFgUAAAAZmV0Y2hfQWNjTGlzdF9hc19YbWxxiWgKaA9DQnQAfAJkAGQBjQJqAX0EdAJ8BIMBfQV0A3wAagRqBWQCgwKPFH0GfAZqBnwFageDAIMBAQBXAGQAUQBSAFgAZABTAHGKXXGLKE5oSoVxjFgCAAAAd2JxjWWGcY6BcY9oG2iJaBxoHWgeaB8pgXGQfXGRKGgiaCNoJFgDAAAAeG1scZKFcZNoJV1xlGiSYWgcaB1oG1ghAAAAZmV0Y2hfQWNjTGlzdF9hc19YbWwuX291dHB1dF90eXBlcZV1YnViaB5okGgoY3NwaXBlci5fdHlwZXMKTm9kZUZ1bmN0aW9uCnGWaCpdcZcoaCxoLVhPAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvX2J1aWxkL3Jvb3QuZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YtdGVzdHGYhXGZgXGahnGbaH1oLVhVAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvbWV0YWNzdl9hdGhfcm5hc2VxL3Jvb3QuZHVtcF9jb2x1bW5zLmNzdi50ZXN0LmNzdnGchXGdgXGehnGfaDdolIZxoGVoOWg6aDtoPClScaFYCQAAAHVzZV9jYWNoZXGiiFgMAAAAX291dHB1dF9kaWN0caNoPClScaQoaJJoLVhtAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvX2J1aWxkL3Jvb3QuZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YtdGVzdC5mZXRjaF9BY2NMaXN0X2FzX1htbC10ZXN0LnhtbHGlhXGmgXGnWAsAAABfY2FjaGVfZmlsZXGoY3NwaXBlci5fdHlwZXMKQ2FjaGVGaWxlCnGpWHoAAAAvaG9tZS91c2VyL3JlcG9zL21ldGFjc3YtYXRoLXJuYXNlcS9fYnVpbGQvX3NwaXBlci9yb290LmZldGNoX0FjY0xpc3RfYXNfU2ltcGxlQ3N2LXRlc3QuZmV0Y2hfQWNjTGlzdF9hc19YbWwtdGVzdC5jYWNoZV9wa3GqhXGrgXGsdVgGAAAAcnVubmVyca1OWAsAAABfYXJnX3ZhbHVlc3GuXXGvKGiaaJ5olGVYDQAAAGNvbmZpZ19ydW5uZXJxsE5YBwAAAF9jYWNoZWRxsYhYDAAAAF9hbGxvd19jYWNoZXGySwF1YnNooohoo2g8KVJxsyhodGgtWFMAAAAvaG9tZS91c2VyL3JlcG9zL21ldGFjc3YtYXRoLXJuYXNlcS9fYnVpbGQvcm9vdC5mZXRjaF9BY2NMaXN0X2FzX1NpbXBsZUNzdi10ZXN0LmNzdnG0hXG1gXG2aKhoqVhgAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvX2J1aWxkL19zcGlwZXIvcm9vdC5mZXRjaF9BY2NMaXN0X2FzX1NpbXBsZUNzdi10ZXN0LmNhY2hlX3BrcbeFcbiBcbl1aK1OaK5dcbooaHtogGh2ZWiwTmixiGiySwF1YnNooohoo2g8KVJxu2ioaKlYRQAAAC9ob21lL3VzZXIvcmVwb3MvbWV0YWNzdi1hdGgtcm5hc2VxL19idWlsZC9fc3BpcGVyL3Jvb3QubWFpbi5jYWNoZV9wa3G8hXG9gXG+c2itTmiuXXG/KGgwaDVoJmVosE5osYhosksBdWIu",
  "ident": "gANdcQAoQ3B8AmQBFwAEAH0EfQV0AHwCZAKDAo88fQZ0AHwFZAODAo8mfQd8B2oBZARqAnwGagODAGoEgwBkAGQFhQIZAIMBgwEBAFcAZABRAFIAWABXAGQAUQBSAFgAfABqBWQGZAeNAXQGfAF8BIMDAQB8AFMAcQFOWAkAAAAudGVzdC5jc3ZxAlgBAAAAcnEDWAEAAAB3cQRYAQAAAApxBUtkWAQAAAB0ZXN0cQZYAwAAAHRhZ3EHY3NwaXBlci5fdHlwZXMKRmlsZQpxCFgvAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvX2J1aWxkL3Jvb3RxCYVxCoFxC0sASwCHcQxoCFhMAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvbWV0YWNzdl9hdGhfcm5hc2VxL3Jvb3QuZHVtcF9jb2x1bW5zLmNzdnENhXEOgXEPR0HXobflgLgXTeNrh3EQZS4="
}