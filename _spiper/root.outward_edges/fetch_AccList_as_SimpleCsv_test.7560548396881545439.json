{
  "version": "0.1.4",
  "to_dict": {
    "dotname": "__main__:fetch_AccList_as_SimpleCsv",
    "args_tuples": [
      "['prefix'       ,spiper._types.File            ,File('/home/user/repos/metacsv-ath-rnaseq/root')]",
      "['input'        ,spiper._types.File            ,File('/home/user/repos/metacsv-ath-rnaseq/root.dump_columns.csv.test.csv')]",
      "['_output'      ,builtins.list                 ,['csv']]"
    ],
    "code": "<code object fetch_AccList_as_SimpleCsv at 0x7fcb92620f60, file \"main.py\", line 75>",
    "sourcefile": "/home/user/repos/metacsv-ath-rnaseq/main.py",
    "sourcelines": [
      "@Flow",
      "def fetch_AccList_as_SimpleCsv(self, prefix, input=File, _output=[",
      "        'csv']):",
      "    import os",
      "    import io",
      "    import warnings",
      "    from eutils._internal.client import Client, ESearchResult",
      "    import xmltodict",
      "    import json",
      "    if not self.runner.is_meta_run:",
      "        print('[fetching] %s sra records' %",
      "              len(list(open(input, 'r').read().rstrip().splitlines())))",
      "    index = _read_pandas(input, header=None).index",
      "    curr = self.runner(fetch_AccList_as_Xml, self.prefix_named, input)",
      "    if not self.runner.is_meta_run:",
      "        jdata = xmltodict.parse(",
      "            open(curr.output.xml, 'rb'), force_list=lambda path, key, value: True)",
      "        samples = jdata['EXPERIMENT_PACKAGE_SET'][0]['EXPERIMENT_PACKAGE']",
      "        samples = [LocalSample.from_ncbi_efetch(",
      "            expt_package) for expt_package in samples]",
      "",
      "        run_ids = sum([x.dict()['RUN_ID_LIST'] for x in samples], [])",
      "        missing = [x for x in index if x not in run_ids]",
      "        assert len(missing) == 0, misisng",
      "",
      "        df = pd.concat([pd.Series(x.to_simple_dict())",
      "                        for x in samples], axis=1).T",
      "        df = df.drop_duplicates(subset=['SAMPLE_ID'])",
      "        # .set_index('ID')",
      "        df.to_csv(self.output.csv, index=0)",
      "        print('[fetching] got %s records' % len(df))",
      "    return self"
    ]
  },
  "modules": [
    [
      "orderedattrdict",
      "1.5.1"
    ],
    [
      "spiper",
      "0.1.4"
    ]
  ],
  "caller_dump": "gANjc3BpcGVyLnJ1bm5lcgpDYWxsZXIKcQApgXEBfXECKFgFAAAAbmFtZWRxA4hYCAAAAF9fbmFtZV9fcQRYHwAAAGZldGNoX0FjY0xpc3RfYXNfU2ltcGxlQ3N2LXRlc3RxBVgDAAAAam9icQZjc3BpcGVyLnJ1bm5lcgpGYWtlSm9iCnEHKYFxCH1xCShoBFgaAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3ZxClgIAAAAX19jb2RlX19xC2NidWlsdGlucwpnZXRhdHRyCnEMY3NwaXBlci5ydW5uZXIKRmFrZUNvZGUKcQ1YCAAAAF9jb2RlY2xzcQ6GcQ9ScRBCUgEAAGQBZABsAH0EZAFkAGwBfQVkAWQAbAJ9BmQBZAJsA20EfQdtBX0IAQBkAWQAbAZ9CWQBZABsB30KfABqCGoJc2Z0CmQDdAt0DHQNfAJkBIMCag6DAGoPgwBqEIMAgwGDARYAgwEBAHQRfAJkAGQFjQJqEn0LfABqCHQTfABqFHwCgwN9DHwAaghqCZABc058CWoVdA18DGoWahdkBoMCZAdkCIQAZAmNAn0NfA1kChkAZAEZAGQLGQB9DmQMZA2EAHwORACDAX0OdBhkDmQNhAB8DkQAgwFnAIMCiQCHAGYBZA9kDYQIfAtEAIMBfQ90C3wPgwFkAWsCkAFzBHQZdBqDAYIBdBtqHGQQZA2EAHwORACDAWQRZBKNAmodfRB8EGoeZBNnAWQUjQF9EHwQah98AGoWaiBkAWQVjQIBAHQKZBZ0C3wQgwEWAIMBAQB8AFMAcRFdcRIoTksAWAYAAABDbGllbnRxE1gNAAAARVNlYXJjaFJlc3VsdHEUhnEVWBkAAABbZmV0Y2hpbmddICVzIHNyYSByZWNvcmRzcRZYAQAAAHJxF1gGAAAAaGVhZGVycRiFcRlYAgAAAHJicRpoEEMEZAFTAHEbXXEcKE6IZYZxHYFxHlgsAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YuPGxvY2Fscz4uPGxhbWJkYT5xH1gKAAAAZm9yY2VfbGlzdHEghXEhWBYAAABFWFBFUklNRU5UX1BBQ0tBR0VfU0VUcSJYEgAAAEVYUEVSSU1FTlRfUEFDS0FHRXEjaBBDFmcAfABdDn0BdABqAXwBgwGRAnEEUwBxJF1xJYZxJoFxJ1guAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YuPGxvY2Fscz4uPGxpc3Rjb21wPnEoaBBDGGcAfABdEH0BfAFqAIMAZAAZAJECcQRTAHEpXXEqWAsAAABSVU5fSURfTElTVHErYYZxLIFxLWgQQxhnAHwAXRB9AXwBiABrB3IEfAGRAnEEUwBxLl1xL4ZxMIFxMWgQQxpnAHwAXRJ9AXQAagF8AWoCgwCDAZECcQRTAHEyXXEzhnE0gXE1SwFYBAAAAGF4aXNxNoVxN1gJAAAAU0FNUExFX0lEcThYBgAAAHN1YnNldHE5hXE6WAUAAABpbmRleHE7hXE8WBkAAABbZmV0Y2hpbmddIGdvdCAlcyByZWNvcmRzcT1lhnE+gXE/WAwAAABfX3F1YWxuYW1lX19xQGgKWAoAAABfX21vZHVsZV9fcUFYCAAAAF9fbWFpbl9fcUJYDAAAAF9vdXRwdXRfdHlwZXFDY3NwaXBlci5fdHlwZXMKUGlja2xhYmxlTmFtZWRUdXBsZQpxRCmBcUV9cUYoWAQAAABuYW1lcUdYBgAAAG15RGF0YXFIWAYAAABmaWVsZHNxSVgDAAAAY3N2cUqFcUtYDQAAAF90eXBlZF9maWVsZHNxTF1xTWhKYWhBaEJoQFgnAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YuX291dHB1dF90eXBlcU51YnViaENoRVgJAAAAX2pvYl90eXBlcU9jc3BpcGVyLl90eXBlcwpGbG93RnVuY3Rpb24KcVBYCgAAAGFyZ190dXBsZXNxUV1xUihYBgAAAHByZWZpeHFTY3NwaXBlci5fdHlwZXMKRmlsZQpxVFgoAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvcm9vdHFVhXFWgXFXhnFYWAUAAABpbnB1dHFZaFRYQgAAAC9ob21lL3VzZXIvcmVwb3MvbWV0YWNzdi1hdGgtcm5hc2VxL3Jvb3QuZHVtcF9jb2x1bW5zLmNzdi50ZXN0LmNzdnFahXFbgXFchnFdWAcAAABfb3V0cHV0cV5oTYZxX2VYCgAAAGRpcl9sYXlvdXRxYFgFAAAAY2xlYW5xYVgIAAAAX3N1YmZsb3dxYmNvcmRlcmVkYXR0cmRpY3QKQXR0ckRpY3QKcWMpUnFkWBkAAABmZXRjaF9BY2NMaXN0X2FzX1htbC10ZXN0cWVoACmBcWZ9cWcoaAOIaARoZWgGaAcpgXFofXFpKGgEWBQAAABmZXRjaF9BY2NMaXN0X2FzX1htbHFqaAtoEENCdAB8AmQAZAGNAmoBfQR0AnwEgwF9BXQDfABqBGoFZAKDAo8UfQZ8BmoGfAVqB4MAgwEBAFcAZABRAFIAWABkAFMAcWtdcWwoTmgYhXFtWAIAAAB3YnFuZYZxb4FxcGhAaGpoQWhCaENoRCmBcXF9cXIoaEdoSGhJWAMAAAB4bWxxc4VxdGhMXXF1aHNhaEFoQmhAWCEAAABmZXRjaF9BY2NMaXN0X2FzX1htbC5fb3V0cHV0X3R5cGVxdnVidWJoQ2hxaE9jc3BpcGVyLl90eXBlcwpOb2RlRnVuY3Rpb24KcXdoUV1xeChoU2hUWEgAAAAvaG9tZS91c2VyL3JlcG9zL21ldGFjc3YtYXRoLXJuYXNlcS9yb290LmZldGNoX0FjY0xpc3RfYXNfU2ltcGxlQ3N2LXRlc3RxeYVxeoFxe4ZxfGhZaFRYQgAAAC9ob21lL3VzZXIvcmVwb3MvbWV0YWNzdi1hdGgtcm5hc2VxL3Jvb3QuZHVtcF9jb2x1bW5zLmNzdi50ZXN0LmNzdnF9hXF+gXF/hnGAaF5odYZxgWVoYGhhaGJoYylScYJYCQAAAHVzZV9jYWNoZXGDiFgMAAAAX291dHB1dF9kaWN0cYRoYylScYUoaHNoVFhmAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvcm9vdC5mZXRjaF9BY2NMaXN0X2FzX1NpbXBsZUNzdi10ZXN0LmZldGNoX0FjY0xpc3RfYXNfWG1sLXRlc3QueG1scYaFcYeBcYhYCwAAAF9jYWNoZV9maWxlcYljc3BpcGVyLl90eXBlcwpDYWNoZUZpbGUKcYpYcwAAAC9ob21lL3VzZXIvcmVwb3MvbWV0YWNzdi1hdGgtcm5hc2VxL19zcGlwZXIvcm9vdC5mZXRjaF9BY2NMaXN0X2FzX1NpbXBsZUNzdi10ZXN0LmZldGNoX0FjY0xpc3RfYXNfWG1sLXRlc3QuY2FjaGVfcGtxi4VxjIFxjXVYBgAAAHJ1bm5lcnGOTlgLAAAAX2FyZ192YWx1ZXNxj11xkChoe2h/aHVlWA0AAABjb25maWdfcnVubmVycZFOWAcAAABfY2FjaGVkcZKIWAwAAABfYWxsb3dfY2FjaGVxk0sBdWJzaIOIaIRoYylScZQoaEpoVFhMAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvcm9vdC5mZXRjaF9BY2NMaXN0X2FzX1NpbXBsZUNzdi10ZXN0LmNzdnGVhXGWgXGXaIloilhZAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvX3NwaXBlci9yb290LmZldGNoX0FjY0xpc3RfYXNfU2ltcGxlQ3N2LXRlc3QuY2FjaGVfcGtxmIVxmYFxmnVojk5oj11xmyhoV2hcaE1laJFOaJKIaJNLAXViLg==",
  "ident": "gANdcQAoQlIBAABkAWQAbAB9BGQBZABsAX0FZAFkAGwCfQZkAWQCbANtBH0HbQV9CAEAZAFkAGwGfQlkAWQAbAd9CnwAaghqCXNmdApkA3QLdAx0DXwCZASDAmoOgwBqD4MAahCDAIMBgwEWAIMBAQB0EXwCZABkBY0CahJ9C3wAagh0E3wAahR8AoMDfQx8AGoIagmQAXNOfAlqFXQNfAxqFmoXZAaDAmQHZAiEAGQJjQJ9DXwNZAoZAGQBGQBkCxkAfQ5kDGQNhAB8DkQAgwF9DnQYZA5kDYQAfA5EAIMBZwCDAokAhwBmAWQPZA2ECHwLRACDAX0PdAt8D4MBZAFrApABcwR0GXQagwGCAXQbahxkEGQNhAB8DkQAgwFkEWQSjQJqHX0QfBBqHmQTZwFkFI0BfRB8EGoffABqFmogZAFkFY0CAQB0CmQWdAt8EIMBFgCDAQEAfABTAHEBTksAWAYAAABDbGllbnRxAlgNAAAARVNlYXJjaFJlc3VsdHEDWBkAAABbZmV0Y2hpbmddICVzIHNyYSByZWNvcmRzcQRYAQAAAHJxBVgGAAAAaGVhZGVycQZYAgAAAHJicQdDBGQBUwBxCE6IWCwAAABmZXRjaF9BY2NMaXN0X2FzX1NpbXBsZUNzdi48bG9jYWxzPi48bGFtYmRhPnEJWAoAAABmb3JjZV9saXN0cQpYFgAAAEVYUEVSSU1FTlRfUEFDS0FHRV9TRVRxC1gSAAAARVhQRVJJTUVOVF9QQUNLQUdFcQxDFmcAfABdDn0BdABqAXwBgwGRAnEEUwBxDVguAAAAZmV0Y2hfQWNjTGlzdF9hc19TaW1wbGVDc3YuPGxvY2Fscz4uPGxpc3Rjb21wPnEOQxhnAHwAXRB9AXwBagCDAGQAGQCRAnEEUwBxD1gLAAAAUlVOX0lEX0xJU1RxEEMYZwB8AF0QfQF8AYgAawdyBHwBkQJxBFMAcRFDGmcAfABdEn0BdABqAXwBagKDAIMBkQJxBFMAcRJLAVgEAAAAYXhpc3ETWAkAAABTQU1QTEVfSURxFFgGAAAAc3Vic2V0cRVYBQAAAGluZGV4cRZYGQAAAFtmZXRjaGluZ10gZ290ICVzIHJlY29yZHNxF2NzcGlwZXIuX3R5cGVzCkZpbGUKcRhYKAAAAC9ob21lL3VzZXIvcmVwb3MvbWV0YWNzdi1hdGgtcm5hc2VxL3Jvb3RxGYVxGoFxG0sASwCHcRxoGFhCAAAAL2hvbWUvdXNlci9yZXBvcy9tZXRhY3N2LWF0aC1ybmFzZXEvcm9vdC5kdW1wX2NvbHVtbnMuY3N2LnRlc3QuY3N2cR2FcR6BcR9HQdehuDWS/0ZN5wOHcSBYAwAAAGNzdnEhZS4="
}